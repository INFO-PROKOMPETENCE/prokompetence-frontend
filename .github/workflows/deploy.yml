on:
  push:
    branches: [ "test" ]


env:
  FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/text-to-image-frontend:${{ github.sha }}
  NGINX_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/text-to-image-nginx:${{ github.sha }}

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Yandex Registry
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }} # авторизованный ключ сервисного аккаунта

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crp00000000000000000 #айди регистри
          CR_REPO: yc-cr-github-action
          IMAGE_TAG: ${{ github.sha }} # в этой переменной хранится хэш последнего коммита
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG

      # - name: Setup Buildx
      #   uses: docker/setup-buildx-action@v2

  build-nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Yandex Registry
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }} # авторизованный ключ сервисного аккаунта

      # - name: Setup Buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Build Nginx for together composing
        uses: docker/build-push-action@v3
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ env.NGINX_IMAGE }}

  update-yc:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-nginx]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.0.1
        env:
          FRONTEND_IMAGE: ${{ env.FRONTEND_IMAGE }}
          NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
          FRONTEND_ORIGINS: ${{ secrets.FRONTEND_ORIGINS }}
          YC_VM_SSH: ${{ secrets.YC_VM_SSH }}
          YC_VM_USERNAME: ${{ secrets.YC_VM_USERNAME }}
          NGINX_CERT: ${{ secrets.NGINX_CERT }}
          NGINX_CERT_KEY: ${{ secrets.NGINX_CERT_KEY }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          VM-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-platform-id: 'standard-v2'
          vm-memory: 512Mb
          vm-disk-size: 30Gb
          vm-core-fraction: 5
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          docker-compose-path: './yandex-cloud/docker-compose.yc.yaml'
          user-data-path: './yandex-cloud/user-data.yaml'
