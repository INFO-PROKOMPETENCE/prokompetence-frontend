on:
  push:
    branches: [ "test" ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Yandex Registry
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }} # авторизационный ключ сервисного аккаунта

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpb0kudcf58ef799cic #id реестра образов
          CR_REPO: prokompetence-frontend
          IMAGE_TAG: ${{ github.sha }} # в этой переменной хранится хэш последнего коммита
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:latest .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPO:latest

#  build-nginx:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Login to Yandex Registry
#        uses: yc-actions/yc-cr-login@v0.1-alpha
#        with:
#          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }} # авторизованный ключ сервисного аккаунта
#
#      - name: Build, tag, and push image to Yandex Cloud Container Registry
#        env:
#          CR_REGISTRY: crpb0kudcf58ef799cic #id реестра образов
#          CR_REPO: prokompetence-nginx
#          IMAGE_TAG: ${{ github.sha }} # в этой переменной хранится хэш последнего коммита
#        run: |
#          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG ./.nginx/
#          docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG

  update-yc:
    runs-on: ubuntu-latest
    needs: [ build-frontend, build-nginx ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.0.1
        env:
          FRONTEND_IMAGE: ${{ env.FRONTEND_IMAGE }}
          NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
          YC_VM_SSH: ${{ secrets.YC_VM_SSH }}
          YC_VM_USERNAME: ${{ secrets.YC_VM_USERNAME }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          VM-name: test-prokompetence
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-platform-id: 'standard-v2'
          vm-memory: 512Mb
          vm-disk-size: 30Gb
          vm-core-fraction: 5
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          docker-compose-path: './.yandex-cloud/docker-compose.yc.yaml'
          user-data-path: './.yandex-cloud/user-data.yaml'
